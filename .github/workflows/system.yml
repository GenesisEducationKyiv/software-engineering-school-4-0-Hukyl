# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: System testing

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Install Docker Compose
      run: |
        sudo apt-get update
        sudo apt-get install -y docker.io
        sudo apt-get install -y docker-compose

    - name: Run the containers
      run: docker compose -f docker-compose.test.yml up -d

    - name: Check for test output
      run: |
        for i in {1..10}; do
          if ! docker inspect -f '{{.State.Running}}' api-service &>/dev/null; then
            # Get the exit code of the container
            exit_code=$(docker inspect --format='{{.State.ExitCode}}' api-service)

            # Fail the step if the exit code is non-zero
            if [ $exit_code -ne 0 ]; then
              echo "Container exited with non-zero exit code: $exit_code"
              exit 1
            fi
          else
            echo "Container with name 'api-service' does not exist"
            exit 1
          fi
          sleep 5
        done

    - name: Stop the containers
      run: docker compose -f docker-compose.test.yml down
      if: always()
